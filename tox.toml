## tox.toml -*- mode: toml-mode -*-
# https://tox.wiki/en/4.28.4/user_guide.html
# https://github.com/tox-dev/tox-uv
# String substitution: "{[<table>]<key>}"
requires                   = ["tox>=4", "tox-uv>=1"]
env_list                   = ["docs"]
work_dir                   = ".temp/tox/work"
temp_dir                   = ".temp/tox/temp"
skip_missing_interpreters  = false

[env_run_base]
description          = "base_env"
runner               = "uv-venv-lock-runner"
allowlist_externals  = ["echo", "mkdir"]
set_env.PKGNAME      = {replace="env", name="PKGNAME", default="doot"}

[env.lint]
description   = "run linters"
skip_install  = true
commands      = [
    ["uv", "run", "ruff", "check",
    "--output-format", "concise",
    {replace="posargs", default=[], extend=true},
    ],
]

[env.type]
description   = "type check files"
skip_install  = true
commands      = [
    ["uv", "run", "mypy",
    {replace="posargs", default=[], extend=true},
    "{[vals]package}",
    ],
]

[env.type-strict]
description = "mypy, but strict"
skip_install = true
commands  = [
    ["uv", "run", "mypy", "--strict",
    {replace="posargs", default=[], extend=true},
    "{[vals]package}"],
]

[env.test]
description   = "run tests"
skip_install  = false
commands      = [
    ["uv", "run", "pytest",
    { replace="posargs", default=["./doot"], extend=true },
    ],
]

[env.test-cov]
description = "Generate test coverage report"
base      = ["env.test"]
commands  = [
    ["uv", "run", "pytest",
     "--cov=./doot",
     "--cov-report=json",
     "--cov-report=term",
     "--cov-report=xml",
     "--cov-report=html",
     "--no-cov-on-fail",
     { replace="posargs", default=["./doot"], extend=true }
     ],
]

[env.docs]
description        = "build documentation"
uv_sync_locked       = false
uv_sync_flags      = ["--no-editable", "--no-sources"]
dependency_groups  = ["docs"]
skip_install       = true
set_env            = [
    {replace="ref", of=["env_run_base", "set_env"]},
    {CONFDIR  = {replace="env", name="CONFDIR",  default="./doot/_docs/"}},
    {OUTDIR   = {replace="env", name="OUTDIR",   default="./.temp/docs/"}},
    {DOCTREE  = {replace="env", name="DOCTREE",  default="./.temp/docs/.doctrees/"}},
]
commands      = [
    ["echo", "Building Documentation to:", "{env:OUTDIR}"],
    ["echo", "Doctrees to:", "{env:DOCTREE}"],
    ["echo", "Config in:", "{env:CONFDIR}"],
    ["uv", "run", "--frozen", "sphinx-build",
    # "-q",
    # "--fresh-env",
    "--conf-dir", "{env:CONFDIR}",
    "--doctree-dir", "{env:DOCTREE}",
    "--warning-file", "./.temp/logs/sphinx.log",
    "--builder", "html",
     "./{env:PKGNAME}",
     "{env:OUTDIR}",
    {replace="posargs", default=[], extend=true}
    ]
]

[env.release]
description  = "Generate a release"
set_env      = [
   {replace="ref", of=["env_run_base", "set_env"]},
   {LEVEL={replace="env", name="LEVEL", default="minor"}},
]
commands     = [
    ["python", ".tasks/release.py", "--bump", "{env:LEVEL}"]
]
