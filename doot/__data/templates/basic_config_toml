# -*- mode:toml; -*-
# Config File for doot (http://github.com/jgrey4296/doot)

[startup]
# The version this config file works with:
doot_version         = "1.1"
loaders              = { commands="default", task="default", parser="default" }
sources              = { tasks=[".tasks"], code=[] }
skip_default_plugins = false
skip_plugin_search   = false
# Implicit Cmds. prepended to the raw cli args if no cmd is parsed
empty_cmd            = ["list"]
implicit_task_cmd    = ["run"]
# constants_file     = ""
# aliases_file       = ""

[startup.plugins]
# Allows for defining aliases
# command        = { tasks="doot.cmds.list_cmd:ListCmd" }

[shutdown]
notify           = { exit="Dooted" } # success_msg="", fail_msg=""
defaulted_values = { write=false, path=".defaulted_values.toml" }
# exit_on_load_failures = true

[settings.commands]
# Set command specific values, and aliases
[settings.commands.run]
tracker         = "default"
runner          = "default"
reporter        = "default"
location_check  = { active=true, make_missing=false, strict=true }
sleep           = { task=0.2, subtask=1, batch=1 }
max_steps       = 100_000
# stepper         = { break_on="job" }

[settings.commands.list]
hide            = []
aliases         = { tasks=[], plugins=["--plugins"] }

[logging]
# Setup output 'stream', 'file' and 'printer' logging.
# See jgdv.logging for details.
# Or call 'doot list --loggers'
# Loggers can be in line format:
# stream  = { level="WARN", filter=[],  target="stdout",   format="{levelname:<8} : {message}"  }
# And disabled quickly using:
# stream = false
# Or as sections:
[logging.stream]
disabled  = false
level     = "user"
filter    = []
# allow     = []
target    = ["stdout"]
format    = "{levelname:<8} : {message}"

[logging.file]
disabled      = true
level         = "trace"
filter        = ["jgdv"]
target        = ["rotate"]
format        = "{levelname:<8} : {message:<20} :|: ({module}.{lineno}.{funcName})"
filename_fmt  = "doot.log"

[logging.printer]
disabled      = false
level         = "NOTSET"
colour        = true
target        = ["stdout"]
format        = "{message}"
filename_fmt  = "doot_printed.log"

[logging.extra]
# Control specific loggers by their path.

[[locations]]
# Locations as structured strings. See jgdv.structs.locator
src     = "src"
codegen = "clean::{src}/_codegen"
temp    = "clean::.temp"
logs    = "{temp}/logs"
build   = "{temp}/build"
docs    = "docs"
data    = "data"
