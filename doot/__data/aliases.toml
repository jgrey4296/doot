# Doot Plugin Alias Mapping
doot_version = "1.1"

[[doot.aliases.command]]
# Map {alias} -> CodeRef String
help      = "doot.cmds.help_cmd:HelpCmd"
run       = "doot.cmds.run_cmd:RunCmd"
list      = "doot.cmds.list_cmd:ListCmd"
stub      = "doot.cmds.stub_cmd:StubCmd"

[[doot.aliases.reporter]]
# Map {alias} -> CodeRef String
default = "doot.reporters:BasicReporter"

[[doot.aliases.tracker]]
# Map {alias} -> CodeRef String
basic    = "doot.control.tracker:Tracker"
factory  = "doot.util.factory:TaskFactory"

[[doot.aliases.runner]]
# Map {alias} -> CodeRef String
basic = "doot.control.runner:DootRunner"

[[doot.aliases.parser]]
# Map {alias} -> CodeRef String
basic    =   "jgdv.cli.arg_parser:CLIParser"

[[doot.aliases.action]] # basic actions
# Map {alias} -> CodeRef String
basic    =       "doot.workflow.actions:DootBaseAction"
user     =       "doot.workflow.actions.io.io:UserInput"
read     =       "doot.workflow.actions.io.io:ReadAction"
copy     =       "doot.workflow.actions.io.io:CopyAction"
move     =       "doot.workflow.actions.io.io:MoveAction"
touch    =       "doot.workflow.actions.io.io:TouchFileAction"

[[doot.aliases.action]] # ! actions
# Map {alias} -> CodeRef String
"link!"   =  "doot.workflow.actions.io.io:LinkAction"
"backup!" =  "doot.workflow.actions.io.io:BackupAction"
"write!"  =  "doot.workflow.actions.io.io:WriteAction"
"append!" =  "doot.workflow.actions.io.io:AppendAction"
"dir!"    =  "doot.workflow.actions.io.io:EnsureDirectory"
"delete!" =  "doot.workflow.actions.io.io:DeleteAction"
"break!"  =  "doot.workflow.actions.util.util:action_debugger"
"type!"   =  "doot.workflow.actions.util.util:typecheck"

[[doot.aliases.action]] # control flow
# Map {alias} -> CodeRef String
"exists?"       = "doot.workflow.actions.control_flow.control_flow:FileExistsCheck"
"ext?"          = "doot.workflow.actions.control_flow.control_flow:SuffixCheck"
"relative?"     = "doot.workflow.actions.control_flow.control_flow:RelativeCheck"
"pred?"         = "doot.workflow.actions.control_flow.control_flow:PredicateCheck"
"installed?"    = "doot.workflow.actions.control_flow.control_flow:AssertInstalled"
"dir?"          = "doot.workflow.actions.io.io:EnsureDirectory"
"wait"          = "doot.workflow.actions.control_flow.control_flow:WaitAction"

[[doot.aliases.action]] # state
# Map {alias} -> CodeRef String
"state.add"                   =  "doot.workflow.actions.state.state:AddStateAction"
"state.add.fn"                =  "doot.workflow.actions.state.state:AddStateFn"
"path.elements"               =  "doot.workflow.actions.state.state:PathParts"
"path.shadow"                 =  "doot.workflow.actions.state.state:ShadowPath"

[[doot.aliases.action]] # misc
# Map {alias} -> CodeRef String
"log"      = "doot.workflow.actions.control_flow.control_flow:LogAction"

[[doot.aliases.task]] # task types
# Map {alias} -> CodeRef String
"job"   = "doot.workflow:DootJob"
"task"  = "doot.workflow:DootTask"
"spec"  = "doot.workflow:TaskSpec"
